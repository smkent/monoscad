from collections import namedtuple
from types import SimpleNamespace as N

Import("env")
b = ModelBuilder(env)

Params = namedtuple(
    "Params",
    (
        "gridx",
        "gridy",
        "gridz",
        "divx",
        "divy",
        "Compartment_Style",
        "style_tab",
        "scoop",
        "d_wall",
        "d_div",
        "a_tab",
        "d_tabh",
        "h_cut_extra",
        "h_cut_extra_single",
        "Div_Axis",
        "Div_Mult_X",
        "Div_Mult_Y",
        "Lip_Grips",
        "args",
        "render_name",
    ),
    defaults=(
        2,
        2,
        3,
        1,
        1,
        "default",
        1,
        1,
        0.95,
        1.2,
        20,
        14.265,
        1.6,
        2.0,
        "y",
        1.0,
        1.0,
        "xy",
        N(),
        None,
    ),
)

model = "bin.scad"

bins = [
    # 2x2x1.5
    Params(
        gridx=2,
        gridy=2,
        gridz=1.5,
        divx=6,
        divy=1,
        h_cut_extra=1.8,
    ),
    # 2x2x3
    Params(gridx=2, gridy=2, divx=1, divy=1, d_wall=1.6),
    Params(
        gridx=2,
        gridy=2,
        gridz=3,
        divx=2,
        divy=1,
        d_wall=1.6,
        a_tab=30,
        d_tabh=13.4725,
    ),
    Params(
        gridx=2,
        gridy=2,
        gridz=3,
        divx=2,
        divy=2,
        d_wall=1.2,
        a_tab=30,
        d_tabh=13.4725,
        h_cut_extra_single=1.4,
    ),
    Params(gridx=2, gridy=2, gridz=3, divx=3, divy=1),
    Params(gridx=2, gridy=2, gridz=3, divx=3, divy=2),
    Params(gridx=2, gridy=2, gridz=3, divx=4, divy=1),
    Params(gridx=2, gridy=2, gridz=3, divx=4, divy=2, h_cut_extra_single=1.4),
    Params(gridx=2, gridy=2, gridz=3, divx=5, divy=1),
    Params(gridx=2, gridy=2, gridz=3, divx=6, divy=1),
    Params(
        gridx=2,
        gridy=2,
        gridz=3,
        Compartment_Style="3p",
        d_wall=1.2,
        a_tab=30,
        d_tabh=13.4725,
    ),
    Params(
        gridx=2,
        gridy=2,
        gridz=3,
        Compartment_Style="6p",
        # d_wall=1.6,
        a_tab=30,
        d_tabh=13.4725,
        h_cut_extra=1.4,
    ),
    # 2x2x6
    Params(
        gridx=2,
        gridy=2,
        gridz=6,
        divx=1,
        divy=1,
        scoop=0.5,
        d_wall=1.6,
        a_tab=36,
        d_tabh=12.68,
        h_cut_extra=1.4,
    ),
    Params(
        gridx=2,
        gridy=2,
        gridz=6,
        divx=2,
        divy=1,
        scoop=0.5,
        d_wall=1.6,
        d_div=1.6,
        a_tab=30,
        d_tabh=13.4725,
        h_cut_extra=1.4,
    ),
    Params(
        gridx=2,
        gridy=2,
        gridz=6,
        divx=2,
        divy=2,
        scoop=0.5,
        d_wall=1.6,
        d_div=1.6,
        a_tab=30,
        d_tabh=13.4725,
        h_cut_extra=1.4,
    ),
    Params(
        gridx=2,
        gridy=2,
        gridz=6,
        Compartment_Style="6p",
        a_tab=30,
        d_tabh=13.4725,
        d_wall=1.6,
        d_div=1.6,
    ),
    Params(
        gridx=2,
        gridy=2,
        gridz=6,
        Compartment_Style="3p",
        d_wall=1.2,
        a_tab=30,
        d_tabh=13.4725,
        h_cut_extra=1.4,
    ),
    # 2x2x9
    Params(
        gridx=2,
        gridy=2,
        gridz=9,
        divx=1,
        divy=1,
        scoop=0.5,
        d_wall=2.6,
        h_cut_extra=1.4,
        style_tab=5,
    ),
    # 2x4x3
    Params(
        gridx=2,
        gridy=4,
        gridz=3,
        divx=4,
        divy=4,
        d_wall=1.6,
        d_div=1.6,
        h_cut_extra_single=1.4,
    ),
    Params(
        gridx=2,
        gridy=4,
        gridz=3,
        divx=1,
        divy=6,
        scoop=1,
        d_wall=2.6,
        d_div=1.6,
        h_cut_extra=1.4,
        style_tab=5,
    ),
    # 2x4x6
    Params(
        gridx=2,
        gridy=4,
        gridz=6,
        Compartment_Style="6p",
        a_tab=30,
        d_tabh=13.4725,
        d_wall=1.6,
        d_div=1.6,
    ),
    Params(
        gridx=2,
        gridy=4,
        gridz=6,
        divx=1,
        divy=4,
        scoop=1,
        d_wall=2.6,
        d_div=2.1,
        a_tab=30,
        d_tabh=13.4725,
        h_cut_extra=1.4,
        style_tab=1,
    ),
    # 2x6x3
    Params(
        gridx=2,
        gridy=6,
        gridz=3,
        divx=4,
        divy=6,
        d_wall=1.6,
        d_div=1.6,
        h_cut_extra_single=1.4,
    ),
    # 4x2x3
    Params(
        gridx=4,
        gridy=2,
        gridz=3,
        divx=1,
        divy=2,
        d_div=1.6,
        d_wall=2.6,
        h_cut_extra=1.4,
        style_tab=5,
    ),
    Params(
        gridx=4,
        gridy=2,
        gridz=3,
        divx=1,
        divy=4,
        d_div=1.6,
        d_wall=2.6,
        h_cut_extra=1.4,
        style_tab=5,
    ),
    Params(
        gridx=4,
        gridy=2,
        gridz=3,
        divx=12,
        divy=1,
        d_div=1.2,
        d_wall=1.2,
        a_tab=20,
        d_tabh=14.265,
        h_cut_extra=1.4,
    ),
    # 4x2x6
    Params(divx=4, divy=2, gridz=6, scoop=0.5, d_wall=1.6, d_div=1.6),
    Params(
        gridx=4,
        gridy=2,
        gridz=6,
        Compartment_Style="split1y",
        divx=8,
        a_tab=30,
        d_tabh=13.4725,
    ),
    Params(
        gridx=4,
        gridy=2,
        gridz=6,
        divx=1,
        divy=1,
        scoop=0.5,
        d_wall=2.6,
        h_cut_extra=1.4,
        style_tab=5,
    ),
    Params(
        gridx=4,
        gridy=2,
        gridz=6,
        divx=1,
        divy=2,
        d_div=1.6,
        d_wall=2.6,
        h_cut_extra=1.4,
        style_tab=5,
    ),
    Params(
        gridx=4,
        gridy=2,
        gridz=6,
        divx=1,
        divy=4,
        scoop=0.5,
        d_div=1.6,
        d_wall=2.6,
        h_cut_extra=1.4,
        style_tab=5,
    ),
    # 4x2x9
    Params(
        gridx=4,
        gridy=2,
        gridz=9,
        divx=1,
        divy=1,
        scoop=0.5,
        d_wall=2.6,
        h_cut_extra=1.4,
        style_tab=5,
    ),
    Params(
        gridx=4,
        gridy=2,
        gridz=9,
        divx=2,
        divy=1,
        scoop=0.5,
        d_wall=2.6,
        h_cut_extra=1.4,
        style_tab=5,
    ),
    # 4x4x3
    Params(
        gridx=4,
        gridy=4,
        gridz=3,
        divx=8,
        divy=4,
        d_wall=1.6,
        d_div=1.6,
        h_cut_extra_single=1.4,
    ),
    # 4x4x9
    Params(
        gridx=4,
        gridy=4,
        gridz=9,
        divx=1,
        divy=4,
        scoop=0,
        d_wall=2.6,
        d_div=2.6,
        h_cut_extra=1.4,
        style_tab=5,
        Lip_Grips="none",
        args=N(Wall_Cut="grip"),
        render_name="card-tray",
    ),
    # 4x6x3
    Params(
        gridx=4,
        gridy=6,
        gridz=3,
        divx=8,
        divy=6,
        d_wall=1.6,
        d_div=1.6,
        h_cut_extra_single=1.4,
    ),
    # 6x2x9
    Params(
        gridx=6,
        gridy=2,
        gridz=9,
        divx=1,
        divy=1,
        scoop=0.5,
        d_wall=2.6,
        h_cut_extra=1.4,
        style_tab=5,
    ),
    Params(
        gridx=6,
        gridy=2,
        gridz=9,
        divx=1,
        divy=2,
        scoop=0,
        d_wall=2.6,
        d_div=2.6,
        h_cut_extra=1.4,
        style_tab=5,
        Lip_Grips="none",
        args=N(Wall_Cut="grip"),
        render_name="envelope-tray",
    ),
    # 6x4x6
    Params(
        gridx=6,
        gridy=4,
        gridz=6,
        divx=1,
        divy=1,
        scoop=0,
        d_wall=2.6,
        h_cut_extra=1.4,
        style_tab=5,
    ),
    # 6x6x3
    Params(
        gridx=6,
        gridy=6,
        gridz=3,
        divx=12,
        divy=6,
        d_wall=1.6,
        d_div=1.6,
        h_cut_extra_single=1.4,
    ),
]

for opts in GenerateOptions(b=[[b] for b in bins]):
    p = opts.b
    ns = p.args
    pdict = p._asdict()
    pdict.pop("args")
    render_name = pdict.pop("render_name")
    if render_name:
        fn_text = f"-{render_name}"
    else:
        div_fn = (
            f"-{render_name}"
            if render_name
            else (
                (f"-{p.divx}x,{p.divy}y" if p.divx and p.divy else "")
                if p.Compartment_Style == "default"
                else f"-{p.Compartment_Style}"
            )
        )
        label_fn = "-nolabel" if p.style_tab == 5 else ""
        fn_text = f"{div_fn}{label_fn}"
    fn = f"bin-{p.gridx}x{p.gridy}x{p.gridz}{fn_text}.stl"
    b.STL(
        fn,
        model,
        {**{"Stacking_Tabs": 1}, **pdict, **ns.__dict__},
        zip_dir="models-for-printing",
    )

b.Image(
    "demo.gif",
    model,
    [
        {
            "gridx": b[0],
            "gridy": b[1],
            "gridz": b[2],
            "divx": b[3],
            "divy": b[4],
        }
        for b in [
            [2, 2, 3, 1, 1],
            [2, 2, 3, 2, 1],
            [2, 2, 3, 2, 2],
            [2, 2, 3, 4, 2],
            [2, 2, 6, 4, 2],
            [2, 2, 6, 2, 2],
            [2, 2, 6, 2, 1],
            [2, 2, 6, 1, 1],
        ]
    ],
)

b.Source(model)

b.add_default_targets()

# vim: ft=python
