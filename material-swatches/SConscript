from collections import namedtuple
from datetime import datetime

Import("env")
b = ModelBuilder(env)

Swatch = namedtuple(
    "Swatch",
    (
        "manufacturer",
        "material",
        "color",
        "string0_size",
        "string1_size",
        "string2_size",
        "string3_size",
    ),
    defaults=("", "", "", 4, 4, 4, 4),
)

model = "material-swatch.scad"
multiline_model = "material-swatch-getburning-remix.scad"
dt = datetime.now().strftime("%Y.%m")

swatches = []

for opts in GenerateOptions(
    material=(("", "blank"), "PETG", "PLA", "ABS", "HIPS", "TPU", "PC"),
    steps=((0, "simple"), (1, "steps")),
):
    b.STL(
        (
            f"material-swatch-{opts.material_fn or opts.material.upper()}"
            f"-{opts.steps_fn}.stl"
        ),
        model,
        {"Text": opts.material, "Steps": opts.steps},
    )

for opts in GenerateOptions(swatch=swatches):
    swatch_dict = opts.swatch._asdict()
    manufacturer = swatch_dict.pop("manufacturer")
    material = swatch_dict.pop("material")
    color = swatch_dict.pop("color")
    color_words = color.split(maxsplit=1)
    strings = {
        f"string{i}": s
        for i, s in enumerate(
            [
                manufacturer.upper(),
                color_words[0].upper(),
                (color_words[1].upper() if len(color_words) > 1 else ""),
                material.upper(),
            ]
            if len(color_words) > 1
            else [
                manufacturer.upper(),
                "",
                color_words[0].upper(),
                material.upper(),
            ]
        )
    }
    b.STL(
        (
            f"my-swatch"
            f"-{manufacturer.lower().replace(' ', '-')}"
            f"-{material.lower().replace(' ', '-')}"
            f"-{color.lower().replace(' ', '-')}"
            ".stl"
        ),
        multiline_model,
        {
            **strings,
            **{
                "string3_origin": 1.0,
                "string3_size": 4,
                "Steps": 0,
            },
            **swatch_dict,
        },
    )

b.Image(
    "demo.gif",
    model,
    [
        {"$fn": 50, "Text": material, "Steps": steps, "Color": color}
        for material, steps, color in [
            ("PLA", 1, "lightblue"),
            ("PETG", 1, "orange"),
            ("TPU", 1, "darkseagreen"),
            ("PC", 1, "yellow"),
            ("Text", 1, "skyblue"),
            ("Simple", 0, "lightsalmon"),
            ("", 0, "slategray"),
        ]
    ],
    camera="15,15,0,35,0,15,100",
)

b.add_default_targets()

# vim: ft=python
