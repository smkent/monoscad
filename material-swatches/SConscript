from collections import namedtuple
from datetime import datetime

Import("env")
b = ModelBuilder(env)

Swatch = namedtuple(
    "Swatch",
    (
        "manufacturer",
        "material",
        "color",
        "string0_size",
        "string1_size",
        "string2_size",
        "string3_size",
    ),
    defaults=("", "", "", 4, 4, 4, 4),
)

model = "material-swatch.scad"
multiline_model = "material-swatch-getburning-remix.scad"
dt = datetime.now().strftime("%Y.%m")

swatches = [
    Swatch("CC3D", "PETG", "blue grey"),
    Swatch("CC3D", "PETG", "bright green"),
    Swatch("CC3D", "PETG", "silver"),
    Swatch("Creality", "PETG", "black", 2.8),
    Swatch("Creality", "PETG", "blue", 2.8),
    Swatch("Creality", "PETG", "trans- parent", 2.8),
    Swatch("Flashforge", "PETG", "gray", 2.4),
    Swatch("Flashforge", "PETG", "green", 2.4),
    Swatch("Flashforge", "PETG", "purple", 2.4),
    Swatch("Flashforge", "PETG", "yellow", 2.4),
    Swatch("Geeetech", "PETG", "gray", 3),
    Swatch("Geeetech", "PLA", "silk bronze", 3),
    Swatch("Geeetech", "PLA", "silk rainbow", 3, string2_size=3.8),
    Swatch("HZST3D", "PETG", "blue"),
    Swatch("HZST3D", "PETG", "fluo yellow"),
    Swatch("HZST3D", "PETG", "green"),
    Swatch("HZST3D", "PETG", "orange"),
    Swatch("HZST3D", "PETG", "purple"),
    Swatch("HZST3D", "PETG", "red"),
    Swatch("Jayo", "PETG", "black"),
    Swatch("Jayo", "PETG", "white"),
    Swatch("Jayo", "PETG", "blue"),
    Swatch("Jayo", "PLA", "light gold"),
    Swatch("Jayo", "PLA", "meta black"),
    Swatch("Jayo", "PLA", "meta red"),
    Swatch("Jayo", "PLA", "meta white"),
    Swatch("Jayo", "PLA", "meta yellow"),
    Swatch("Jayo", "PLA", "red copper"),
    Swatch("Jayo", "PLA", "silk green"),
    Swatch("Jayo", "PLA", "silk blue"),
    Swatch("Overture", "PETG", "grass green", 2.8),
    Swatch("Overture", "PETG", "rock white", 2.8),
    Swatch("Overture", "PLA", "grass green", 2.8),
    Swatch("Polymaker", "PETG", "dark blue", 2.6),
    Swatch("R3D", "PLA", "pink"),
    Swatch("Sunlu", "PLA", "apple green", 3.3),
    Swatch("Sunlu", "PLA", "cream white", 3.3),
    Swatch("Sunlu", "PLA", "ice blue", 3.3),
    Swatch("Sunlu", "PLA", "meta blue", 3.3),
    Swatch("Sunlu", "PLA", "taro purple", 3.3),
    Swatch("TPMOINS", "PETG", "army green", 3.5),
    Swatch("TPMOINS", "PETG", "cyan", 3.5),
    Swatch("TPMOINS", "PETG", "purple", 3.5),
    Swatch("Voxelab", "ASA", "sky blue", 3.3),
    Swatch("Voxelab", "PETG", "burnt titanium", 3.3),
    Swatch("Voxelab", "PLA", "nebula purple", 3.3),
]

for opts in GenerateOptions(
    material=(("", "blank"), "PETG", "PLA", "ABS", "HIPS", "TPU", "PC"),
    steps=((0, "simple"), (1, "steps")),
):
    b.STL(
        (
            f"material-swatch-{opts.material_fn or opts.material.upper()}"
            f"-{opts.steps_fn}.stl"
        ),
        model,
        {"Text": opts.material, "Steps": opts.steps},
    )

for opts in GenerateOptions(swatch=[(s,) for s in swatches]):
    swatch_dict = opts.swatch._asdict()
    manufacturer = swatch_dict.pop("manufacturer")
    material = swatch_dict.pop("material")
    color = swatch_dict.pop("color")
    color_words = color.split(maxsplit=1)
    strings = {
        f"string{i}": s
        for i, s in enumerate(
            [
                manufacturer.upper(),
                color_words[0].upper(),
                (color_words[1].upper() if len(color_words) > 1 else ""),
                material.upper(),
            ]
            if len(color_words) > 1
            else [
                manufacturer.upper(),
                "",
                color_words[0].upper(),
                material.upper(),
            ]
        )
    }
    b.STL(
        (
            f"my-swatch"
            f"-{manufacturer.lower().replace(' ', '-')}"
            f"-{material.lower().replace(' ', '-')}"
            f"-{color.lower().replace(' ', '-')}"
            ".stl"
        ),
        multiline_model,
        {
            **strings,
            **{
                "string3_origin": 1.0,
                "string3_size": 4,
                "Steps": 0,
            },
            **swatch_dict,
        },
    )

b.Image(
    "demo.gif",
    model,
    [
        {"$fn": 50, "Text": material, "Steps": steps, "Color": color}
        for material, steps, color in [
            ("PLA", 1, "lightblue"),
            ("PETG", 1, "orange"),
            ("TPU", 1, "darkseagreen"),
            ("PC", 1, "yellow"),
            ("Text", 1, "skyblue"),
            ("Simple", 0, "lightsalmon"),
            ("", 0, "slategray"),
        ]
    ],
    camera="15,15,0,35,0,15,100",
)

b.add_default_targets()

# vim: ft=python
